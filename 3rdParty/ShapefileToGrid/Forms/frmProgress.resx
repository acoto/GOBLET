<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAAABoBQAAJgAAACAgAAAAAAAAqAgAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAEAB
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wDAAMAAm6ibAGY0ZAD/AP8AoU6hAIoAigBFAEUAw8PDAG1t
        bQBoBGgA3wDfAIeHhwBLS0sAhEGEAKUApQAtES0ASiJKALC7sABXAFcAkU6RANAA0AB7AHsA7QDtAJGU
        kQCzALMAWS5ZAKenpwBLOksAmQCZAPX39QBmQ2YAekF6AHEAcQD2APYAvLu8AE4ATgC7x7sAYABgAJMI
        kwDHBMcAi0SLAKwArACCAIIAs7OzAFBQUAD5//kA5wDnANYA1gC5ALkAkACQAIKKggCeAJ4Ag4ODAH5E
        fgCIjYgA+fn5AL0EvQDLA8sAj4+PAIhAiAD7APsAUgBSANsA2wDEAMQAlACUAPz8/ADAwMAAagBqAFwv
        XADzAPMAvcC9AOIA4gDTANMAZwBnAHQAdADDBMMAfgB+ALYAtgCHAIcAsACwAKIAogCkTqQAWjJaAMcA
        xwDABMAAvcm9AIWFhQCHQ4cA/P/8AJGRkQCIiogAj02PAP0A/QD5APkARwBHAOUA5QDOAM4AxQTFAL4A
        vgCEAIQAjACMAI4AjgCnAKcAvr6+AGU2ZQCFQ4UAhkGGAP39/QD6+voA+Pj4ALzIvAC8xrwAwcHBAL29
        vQCKQ4oA+//7APwA/ABNAE0A+gD6APcA9wBfAF8A4QDhAN4A3gBzAHMAZTRlAH8AfwDFAMUAwwDDAMYE
        xgCJAIkAwQTBAL4EvgC3ALcAkwCTALUAtQCvAK8AoQChAKMAowCkAKQAh0GHAL3IvQC7xrsAvLy8AI+Q
        jwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4KW1s8DjxbW5EdXRUVahkAaW1tbjY5bW1aWQUFXlFwAHIBAW1Y
        QwEBOVRSMAUajgByAQFtWEMBb1MnVWUMMo4AV3V1LzRaHwZVZgVBioiPAAQPbD0SIRtLBwhlTBR6OABk
        djCHdzMWBV8sdjFoT3EAVgUrGn17BQVeZQVAjDKOACkYHnhmBQUFXoMjaAKGjgCCfB4FLHk+XgVFg2IF
        iSYAC04lF2AsUH8UESB0a0ZcADpegFJnBUeLNTcBWloTJACEBV8QIoFCSgWNWgEBLXMAOwUFYT+KSQUF
        KgEBAZAJAyhWVk0LTWNWhX5IREQNHAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAACAAAAAgAAAAIAA
        AACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAAAAAAD//wAAKAAAACAAAABAAAAAAQAIAAAA
        AACABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A//8AAP8A/wCAAIAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEBAQEBAQEBAAEBAQEBAQEBAQABAQEBAQEBAQABAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQABAQEBAQEBAQABAQEBAQEBAQEAAwMDAwMDAwMA
        AQEBAAEBAQEBAQEBAAEBAQEBAQEBAQADAwMDAwMDAwABAQEAAQEBAQEBAQEAAQEBAQEBAQEBAAMDAwMD
        AwMDAAEBAQABAQEBAQEBAQABAQEBAQEBAQEABAQDAwMDAwMAAQEBAAEBAQEBAQEBAAEBAQEBAQEBBAAE
        BAQEAwMDAwABAQEAAQEBAQEBAQEAAQEBAQEBAQQEAAMDBAQEAwMDAAEBAQABAQEBAQEBAQABAQEBAQEE
        BAMAAwMDBAQEAwMAAQEBAAEBAQEBAQEBAAEBAQEBBAQDAwADAwMDBAQDAwABAQEAAQEBAQEBAQEAAQEB
        AQQEAwMDAAMDAwMEBAMDAAEBAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAMDAwMDAwMD
        AAMDBAQDAwMDAwADAwMDBAQDAwABAQEAAwMDAwMEBAQABAQEAwMDAwMDAAMDAwMEBAMDAAEBAQADAwMD
        AwQEBAAEBAMDAwMDAwMAAwMDAwQEAwMAAQEBAAMDAwMEBAMDAAMDAwMDAwMDAwADAwMDBAQDAwABAQEA
        AwMDAwQEAwMAAwMDAwMDAwMDAAMDAwMEBAMDAAEBAQADAwMEBAMDAwADAwMDAwMDAwMAAwMDBAQEAwMA
        AQEBAAMDAwQEAwMDAAMDAwMDAwMDAwADAwQEAwMDAwABAQEAAwMDBAQDAwMAAwMDAwMDAwMDAAQEBAMD
        AwMDAAEBAQADAwMEBAMDAwADAwMDAwMDAwMABAQDAwMDAwMAAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQEAAwMDAwQEAwMAAwMDAwMDBAQEAAEBAQEBAQEBAAEBAQADAwMDAwQEAwADAwMDAwQE
        BAMAAQEBAQEBAQEAAQEBAAMDAwMDBAQDAAMDAwMEBAMDAwABAQEBAQEBAQABAQEAAwMDAwMDBAMAAwME
        BAQDAwMDAAEBAQEBAQEBAAEBAQADAwMDAwMEBAAEBAQEAwMDAwMAAQEBAQEBAQEAAQEBAAMDAwMDAwME
        AAQEBAMDAwMDAwABAQEBAQEBAQABAQEAAwMDAwMDAwMAAwMDAwMDAwMDAAEBAQEBAQEBAAEBAQADAwMD
        AwMDAwADAwMDAwMDAwMAAQEBAQEBAQEAAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>